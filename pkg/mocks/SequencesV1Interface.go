// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	api "github.com/keptn/go-utils/pkg/api/utils"
	mock "github.com/stretchr/testify/mock"
)

// SequencesV1Interface is an autogenerated mock type for the SequencesV1Interface type
type SequencesV1Interface struct {
	mock.Mock
}

type SequencesV1Interface_Expecter struct {
	mock *mock.Mock
}

func (_m *SequencesV1Interface) EXPECT() *SequencesV1Interface_Expecter {
	return &SequencesV1Interface_Expecter{mock: &_m.Mock}
}

// ControlSequence provides a mock function with given fields: params
func (_m *SequencesV1Interface) ControlSequence(params api.SequenceControlParams) error {
	ret := _m.Called(params)

	var r0 error
	if rf, ok := ret.Get(0).(func(api.SequenceControlParams) error); ok {
		r0 = rf(params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SequencesV1Interface_ControlSequence_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ControlSequence'
type SequencesV1Interface_ControlSequence_Call struct {
	*mock.Call
}

// ControlSequence is a helper method to define mock.On call
//  - params api.SequenceControlParams
func (_e *SequencesV1Interface_Expecter) ControlSequence(params interface{}) *SequencesV1Interface_ControlSequence_Call {
	return &SequencesV1Interface_ControlSequence_Call{Call: _e.mock.On("ControlSequence", params)}
}

func (_c *SequencesV1Interface_ControlSequence_Call) Run(run func(params api.SequenceControlParams)) *SequencesV1Interface_ControlSequence_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(api.SequenceControlParams))
	})
	return _c
}

func (_c *SequencesV1Interface_ControlSequence_Call) Return(_a0 error) *SequencesV1Interface_ControlSequence_Call {
	_c.Call.Return(_a0)
	return _c
}
