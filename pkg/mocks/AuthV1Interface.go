// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	models "github.com/keptn/go-utils/pkg/api/models"
	mock "github.com/stretchr/testify/mock"
)

// AuthV1Interface is an autogenerated mock type for the AuthV1Interface type
type AuthV1Interface struct {
	mock.Mock
}

type AuthV1Interface_Expecter struct {
	mock *mock.Mock
}

func (_m *AuthV1Interface) EXPECT() *AuthV1Interface_Expecter {
	return &AuthV1Interface_Expecter{mock: &_m.Mock}
}

// Authenticate provides a mock function with given fields:
func (_m *AuthV1Interface) Authenticate() (*models.EventContext, *models.Error) {
	ret := _m.Called()

	var r0 *models.EventContext
	if rf, ok := ret.Get(0).(func() *models.EventContext); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.EventContext)
		}
	}

	var r1 *models.Error
	if rf, ok := ret.Get(1).(func() *models.Error); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*models.Error)
		}
	}

	return r0, r1
}

// AuthV1Interface_Authenticate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Authenticate'
type AuthV1Interface_Authenticate_Call struct {
	*mock.Call
}

// Authenticate is a helper method to define mock.On call
func (_e *AuthV1Interface_Expecter) Authenticate() *AuthV1Interface_Authenticate_Call {
	return &AuthV1Interface_Authenticate_Call{Call: _e.mock.On("Authenticate")}
}

func (_c *AuthV1Interface_Authenticate_Call) Run(run func()) *AuthV1Interface_Authenticate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *AuthV1Interface_Authenticate_Call) Return(_a0 *models.EventContext, _a1 *models.Error) *AuthV1Interface_Authenticate_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}
