// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	api "github.com/keptn/go-utils/pkg/api/utils"
	mock "github.com/stretchr/testify/mock"

	models "github.com/keptn/go-utils/pkg/api/models"
)

// ShipyardControlV1Interface is an autogenerated mock type for the ShipyardControlV1Interface type
type ShipyardControlV1Interface struct {
	mock.Mock
}

type ShipyardControlV1Interface_Expecter struct {
	mock *mock.Mock
}

func (_m *ShipyardControlV1Interface) EXPECT() *ShipyardControlV1Interface_Expecter {
	return &ShipyardControlV1Interface_Expecter{mock: &_m.Mock}
}

// GetOpenTriggeredEvents provides a mock function with given fields: filter
func (_m *ShipyardControlV1Interface) GetOpenTriggeredEvents(filter api.EventFilter) ([]*models.KeptnContextExtendedCE, error) {
	ret := _m.Called(filter)

	var r0 []*models.KeptnContextExtendedCE
	if rf, ok := ret.Get(0).(func(api.EventFilter) []*models.KeptnContextExtendedCE); ok {
		r0 = rf(filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.KeptnContextExtendedCE)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(api.EventFilter) error); ok {
		r1 = rf(filter)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ShipyardControlV1Interface_GetOpenTriggeredEvents_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetOpenTriggeredEvents'
type ShipyardControlV1Interface_GetOpenTriggeredEvents_Call struct {
	*mock.Call
}

// GetOpenTriggeredEvents is a helper method to define mock.On call
//  - filter api.EventFilter
func (_e *ShipyardControlV1Interface_Expecter) GetOpenTriggeredEvents(filter interface{}) *ShipyardControlV1Interface_GetOpenTriggeredEvents_Call {
	return &ShipyardControlV1Interface_GetOpenTriggeredEvents_Call{Call: _e.mock.On("GetOpenTriggeredEvents", filter)}
}

func (_c *ShipyardControlV1Interface_GetOpenTriggeredEvents_Call) Run(run func(filter api.EventFilter)) *ShipyardControlV1Interface_GetOpenTriggeredEvents_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(api.EventFilter))
	})
	return _c
}

func (_c *ShipyardControlV1Interface_GetOpenTriggeredEvents_Call) Return(_a0 []*models.KeptnContextExtendedCE, _a1 error) *ShipyardControlV1Interface_GetOpenTriggeredEvents_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}
