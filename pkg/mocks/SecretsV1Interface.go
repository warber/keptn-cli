// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	models "github.com/keptn/go-utils/pkg/api/models"
	mock "github.com/stretchr/testify/mock"
)

// SecretsV1Interface is an autogenerated mock type for the SecretsV1Interface type
type SecretsV1Interface struct {
	mock.Mock
}

type SecretsV1Interface_Expecter struct {
	mock *mock.Mock
}

func (_m *SecretsV1Interface) EXPECT() *SecretsV1Interface_Expecter {
	return &SecretsV1Interface_Expecter{mock: &_m.Mock}
}

// CreateSecret provides a mock function with given fields: secret
func (_m *SecretsV1Interface) CreateSecret(secret models.Secret) error {
	ret := _m.Called(secret)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Secret) error); ok {
		r0 = rf(secret)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SecretsV1Interface_CreateSecret_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateSecret'
type SecretsV1Interface_CreateSecret_Call struct {
	*mock.Call
}

// CreateSecret is a helper method to define mock.On call
//  - secret models.Secret
func (_e *SecretsV1Interface_Expecter) CreateSecret(secret interface{}) *SecretsV1Interface_CreateSecret_Call {
	return &SecretsV1Interface_CreateSecret_Call{Call: _e.mock.On("CreateSecret", secret)}
}

func (_c *SecretsV1Interface_CreateSecret_Call) Run(run func(secret models.Secret)) *SecretsV1Interface_CreateSecret_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(models.Secret))
	})
	return _c
}

func (_c *SecretsV1Interface_CreateSecret_Call) Return(_a0 error) *SecretsV1Interface_CreateSecret_Call {
	_c.Call.Return(_a0)
	return _c
}

// DeleteSecret provides a mock function with given fields: secretName, secretScope
func (_m *SecretsV1Interface) DeleteSecret(secretName string, secretScope string) error {
	ret := _m.Called(secretName, secretScope)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(secretName, secretScope)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SecretsV1Interface_DeleteSecret_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteSecret'
type SecretsV1Interface_DeleteSecret_Call struct {
	*mock.Call
}

// DeleteSecret is a helper method to define mock.On call
//  - secretName string
//  - secretScope string
func (_e *SecretsV1Interface_Expecter) DeleteSecret(secretName interface{}, secretScope interface{}) *SecretsV1Interface_DeleteSecret_Call {
	return &SecretsV1Interface_DeleteSecret_Call{Call: _e.mock.On("DeleteSecret", secretName, secretScope)}
}

func (_c *SecretsV1Interface_DeleteSecret_Call) Run(run func(secretName string, secretScope string)) *SecretsV1Interface_DeleteSecret_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(string))
	})
	return _c
}

func (_c *SecretsV1Interface_DeleteSecret_Call) Return(_a0 error) *SecretsV1Interface_DeleteSecret_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetSecrets provides a mock function with given fields:
func (_m *SecretsV1Interface) GetSecrets() (*models.GetSecretsResponse, error) {
	ret := _m.Called()

	var r0 *models.GetSecretsResponse
	if rf, ok := ret.Get(0).(func() *models.GetSecretsResponse); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.GetSecretsResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SecretsV1Interface_GetSecrets_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetSecrets'
type SecretsV1Interface_GetSecrets_Call struct {
	*mock.Call
}

// GetSecrets is a helper method to define mock.On call
func (_e *SecretsV1Interface_Expecter) GetSecrets() *SecretsV1Interface_GetSecrets_Call {
	return &SecretsV1Interface_GetSecrets_Call{Call: _e.mock.On("GetSecrets")}
}

func (_c *SecretsV1Interface_GetSecrets_Call) Run(run func()) *SecretsV1Interface_GetSecrets_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *SecretsV1Interface_GetSecrets_Call) Return(_a0 *models.GetSecretsResponse, _a1 error) *SecretsV1Interface_GetSecrets_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

// UpdateSecret provides a mock function with given fields: secret
func (_m *SecretsV1Interface) UpdateSecret(secret models.Secret) error {
	ret := _m.Called(secret)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Secret) error); ok {
		r0 = rf(secret)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SecretsV1Interface_UpdateSecret_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateSecret'
type SecretsV1Interface_UpdateSecret_Call struct {
	*mock.Call
}

// UpdateSecret is a helper method to define mock.On call
//  - secret models.Secret
func (_e *SecretsV1Interface_Expecter) UpdateSecret(secret interface{}) *SecretsV1Interface_UpdateSecret_Call {
	return &SecretsV1Interface_UpdateSecret_Call{Call: _e.mock.On("UpdateSecret", secret)}
}

func (_c *SecretsV1Interface_UpdateSecret_Call) Run(run func(secret models.Secret)) *SecretsV1Interface_UpdateSecret_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(models.Secret))
	})
	return _c
}

func (_c *SecretsV1Interface_UpdateSecret_Call) Return(_a0 error) *SecretsV1Interface_UpdateSecret_Call {
	_c.Call.Return(_a0)
	return _c
}
